name: Release-please

# Give permissions to the release-please bot to open and update PRs
# and commit to PRs the repository to update Cargo.lock
permissions:
  contents: write
  pull-requests: write
  id-token: write
  attestations: write
  packages: write

# Run the workflow on push to the main branch and manually
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  # Prepare the release PR with changelog updates and create github releases
  release-please:
    uses: matter-labs/zksync-ci-common/.github/workflows/release-please.yaml@v1
    secrets:
      slack_webhook: ${{ secrets.SLACK_WEBHOOK_RELEASES }}
      gh_token: ${{ secrets.RELEASE_TOKEN }}
    with:
      config: '.github/release-please/config.json'     # Specify the path to the configuration file
      manifest: '.github/release-please/manifest.json' # Specify the path to the manifest file
      update-cargo-lock: true                          # Update Cargo.lock file
      publish-to-crates-io: false                      # Custom publishing logic is implemented in the next job

  # Publish packages to crates.io
  process-release:
    runs-on: [ubuntu-24.04-github-hosted-32core]
    container:
      image: nvidia/cuda:13.0.0-devel-ubuntu24.04
    env:
      BELLMAN_CUDA_DIR: ${{ github.workspace }}/bellman-cuda
      CUDAARCHS: 89
    needs: [release-please]
    if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    steps:

      - name: Prepare environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt update && apt install -y \
            pkg-config libclang-dev build-essential lldb lld \
            clang openssl libssl-dev gcc g++ wget curl jq
          echo "/usr/local/nvidia/bin:/usr/local/cuda/bin" >> $GITHUB_PATH

      - name: Checkout code
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Setup CMake
        run: |
          curl -LO https://github.com/Kitware/CMake/releases/download/v3.24.3/cmake-3.24.3-linux-x86_64.sh && \
            chmod +x cmake-3.24.3-linux-x86_64.sh && \
            ./cmake-3.24.3-linux-x86_64.sh --skip-license --prefix=/usr/local

      - name: Prepare bellman-cuda directory
        shell: bash
        # Curl ugliness is required because gh can't work with authentication: https://github.com/cli/cli/issues/2680.
        run: |
          release=($(curl --silent https://api.github.com/repos/matter-labs/era-bellman-cuda/releases | jq -r '.[0] | .name, .tarball_url, .assets[0].browser_download_url'))
          curl --silent -L "${release[1]}" --output bellman-cuda-source.tar.gz
          curl --silent -L "${release[2]}" --output bellman-cuda.tar.gz
          mkdir -p bellman-cuda
          tar xvfz bellman-cuda.tar.gz -C ./bellman-cuda
          tar xvfz bellman-cuda-source.tar.gz -C ./bellman-cuda --strip-components=1 --wildcards \*/src/

      - name: Publish crates
        uses: matter-labs/zksync-ci-common/.github/actions/publish-crates@v1
        with:
          skip_checkout: true
          gh_token: ${{ secrets.RELEASE_TOKEN }}
          cargo_registry_token: ${{ secrets.CRATES_IO_TOKEN }}
          slack_webhook: ${{ secrets.SLACK_WEBHOOK_RELEASES }}
